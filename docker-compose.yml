services:
  # Grafana Alloy batches and processes traces sent to it, generating
  # auto-logs from those traces.
  # Includes Metrics, Logs, Traces and Profiles.
  alloy:
    image: grafana/alloy:latest
    restart: unless-stopped
    container_name: gf_alloy
    hostname: gf_alloy
    ports:
      - "12347:12345"
      - "12348:12348"
      - "6832:6832"
      - "55679:55679"
    volumes:
      - "./alloy/config.alloy:/etc/alloy/config.alloy"
      - "./alloy/endpoints.json:/etc/alloy/endpoints.json"
    command: [
      "run",
      "--server.http.listen-addr=0.0.0.0:12345",
      "--stability.level=public-preview",
      "/etc/alloy/config.alloy",
    ]
    networks:
      - default
      - proxy

  # The Grafana dashboarding server.
  grafana:
    image: grafana/grafana-oss:latest
    restart: unless-stopped
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=correlations
      - GF_SERVER_ROOT_URL=${ROOT_URL}
      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
      - GF_AUTH_GENERIC_OAUTH_NAME=authentik
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - GF_AUTH_GENERIC_OAUTH_SCOPES=openid profile email
      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=https://${OAUTH_DOMAIN}/application/o/authorize/
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=https://${OAUTH_DOMAIN}/application/o/token/
      - GF_AUTH_GENERIC_OAUTH_API_URL=https://${OAUTH_DOMAIN}/application/o/userinfo/
      - GF_AUTH_SIGNOUT_REDIRECT_URL=https://${OAUTH_DOMAIN}/application/o/${OAUTH_SLUG}/end-session/
#      - GF_AUTH_OAUTH_AUTO_LOGIN=true
      - GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH=contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'
    volumes:
      - grafana_config:/etc/grafana
      - grafana_data:/var/lib/grafana
      - grafana_log:/var/log/grafana
    networks:
     - default
     - proxy

  # InfluxDB collects and stores time-series data to be used as a Grafana Source
  influxdb:
    image: influxdb:latest
    restart: unless-stopped
    container_name: gf_influxdb
    hostname: gf_influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-password1234}
      - DOCKER_INFLUXDB_INIT_ORG=Lab32
      - DOCKER_INFLUXDB_INIT_BUCKET=lab32
    networks:
      - default
      - proxy

  # The Loki service stores logs sent to it, and takes queries from Grafana
  # to visualise those logs.
  loki:
    image: grafana/loki:latest
    restart: unless-stopped
    command: ["-config.file=/etc/loki/loki.yaml"]
    ports:
      - "3100:3100"
    volumes:
      - "./loki/loki.yaml:/etc/loki/loki.yaml"
      - loki_data:/loki

  # Promtail collects logs from syslog and sends them to Loki
  promtail:
    image: grafana/promtail:latest
    restart: unless-stopped
    volumes:
      - promtail_log:/var/log
      - promtail_positions:/promtail_positions
      - ./promtail/promtail.yaml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  syslogng:
    image: linuxserver/syslog-ng:latest
    restart: unless-stopped
    ports:
      - 514:5514/udp
      - 601:6601
    volumes:
      - ./syslog-ng:/config
      - syslogng_logs:/var/log

  # Mimir is a long-term storage for Metrics
  mimir:
    image: grafana/mimir:latest
    restart: unless-stopped
    command: ["-ingester.native-histograms-ingestion-enabled=true", "-config.file=/etc/mimir.yaml"]
    volumes:
      - "./mimir/mimir.yaml:/etc/mimir.yaml"
      - mimir_data:/mimir

  cadvisor:
    image: google/cadvisor:latest
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

volumes:
  grafana_config:
  grafana_data:
  grafana_log:
  loki_data:
  promtail_log:
  promtail_positions:
  mimir_data:
  influxdb_data:
  influxdb_config:
  syslogng_logs:

networks:
  default:
    name: grafana_backend
  proxy:
    name: proxy
    external: true
